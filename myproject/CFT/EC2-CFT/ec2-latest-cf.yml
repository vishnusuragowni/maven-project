####################################################################################
# Service Catalog Cloud formation template that provisions EC2 instances
# Created by: Abhishek Naik / Josue Ariosa
# Date: 05/23/2018
# Modified by: Jijomon S Pillai
# Modified Date: 06/11/2019
# Description : Used by Service Catalog as a product for launching an EC2 instance
#
####################################################################################

####################################### Metadata #############################################
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
     ### General ###
      -
        Label:
          default: "General Parameters"
        Parameters:
          - AppCode
          - OwnerContact
          - Requestor
          - AppName
     ### EC2 Details ###
      -
        Label:
          default: "EC2 Parameters"
        Parameters:
          - HostNumber
          - InstanceTypeParameter
          - TypeOfInstance
          - Ec2InstanceSubnetID
          - ApplicationTier
          - IamInstanceProfile
          - OS
          - HADRTier
          - DataClassification
          - Purpose
     ### EC2 Config ###
      -
        Label:
          default: "EC2 Config Parameters"
        Parameters:
          - AutomateShutdown
          - WeekendOperation
          - BackupWindows
          - MaintenanceWindow
          - OpsWindow
     ### EBS ###
      -
        Label:
          default: "EBS Parameters"
        Parameters:
          - VolumeType
          - VolumeSize
    
####################################### Parameters #############################################
          
# ==============================
# Define CF Template Parameters
# ==============================

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m5.xlarge
    - m5.2xlarge
    - m5.8xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge    
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    - x1e.xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Description: 'Enter type of instance that needs to be provisioned. Default is t2.micro.'
  TypeOfInstance:
    Type: String
    Description: 'Two digit identifier for instace usage. Default is GC (General Compute)'
    AllowedValues:
      - GC
      - RD
      - DB
      - AP
      - BS
      - CS
      - AD
      - EM
      - JS
  AppCode:
    Type: String
    MaxLength: '5'
    AllowedPattern: '^([a-zA-Z0-9_-]){5}$'
    Description: 'The application code name cannot be of more that 5 characters'
    ConstraintDescription: "Appcode field does not match the required constraints"

  AppName:
    Type: String
    Description: 'please provide for which application Edp is creating this resource for'

  Environment:
    Type: String
    AllowedValues:
      - Prod
      - Test
      - Dev
      - QA
      - DR
      - Sandbox
    Default: Dev

  Requestor:
    Type: String
    Description: Please specify email address of the requestor.   
 
  OwnerContact:
    Type: String
    Description: Please specify email address of the owner.

  OS:
    Type: String
    AllowedValues:
      - "LinuxSandbox"
      - "LinuxQA"
      - "LinuxNonProd"
      - "LinuxOracle"
    Description: 'Please enter the flavor of LINUX'
    Default: "LinuxNonProd"
    
  HADRTier:
    Type: String
    AllowedValues:
     - 1
     - 2
     - 3
     - 4
     - 5
    Default: 5
    Description: 'Please specify the DR tier for your instances'

  ApplicationTier:
    Type: String
    AllowedValues:
      - App
      - DataBase
      - Web
      - Visibility
      - White
      - Lambda
      - Prime
    Default: App

  AutomateShutdown:
    Type: String
    AllowedValues:
      - 'yes'
      - 'no'
    Description: 'This field specifies if the server needs to be automatically shut down every day.'
    Default: 'yes'

  OpsWindow:
    Type: String
    Default: '0700,1900'
    Description: 'Please enter the Start and Stop in the following format 0700,1900'

  WeekendOperation:
    Type: String
    Default: "FALSE"
    Description: 'This field specifies if the servers needs to be running during the weekend'
    AllowedValues:
      - "TRUE"
      - "FALSE"

  BackupWindows:
    Type: String
    Default: '0700,1900'
    Description: 'Please enter the backup windows'
    
  MaintenanceWindow:
    Type: String
    Default: '0700,1900'
    Description: 'Please enter the Start and Stop in the following format 0700,1900'

  DataClassification:
    Type: String
    Description: 'This field specifies the type of data that would be residing on the servers'

  HostNumber:
    Type: String
    AllowedPattern: '^([0-9]){2}$'
    Description: 'Please assigned a number for this EC2 instance between 01 and 99. Please make sure it is unique'
    Default: '05'
    ConstraintDescription: "HostNumber field has to be a 2 digit number between 01 and 99"

  Ec2InstanceSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Instance will be launched in the subnet specified.
 
  VolumeType:
    Type: String
    Description: Volume type for additional EBS
    AllowedValues:
    - gp2
    - io1
    - sc1
    - st1
    - standard
  VolumeSize:
    Type: String
    Description: Volume size for addiontal EBS
    Default: 500

  IamInstanceProfile:
    Type: String
    Description: IAM instance profile, NEE-EN411-AllBU-AllDept-Ingest-Role-for prod and QA 
    AllowedValues:
    - NEE-EN411-AllBU-AllDept-Ingest-Role
    - 2env-edp-allbu-alldept-talend-ec2profile
    - NEE-EC2-ITAM-Role
  
  Purpose:
    Type: String
    Description: please provide a detailed purpose of this server is being built for.
  
  L1SG:
    Type: String
    Default: sg-34e00d42
  L2SG:
    Type: String
    Default: sg-85e00df3
  L2SG2:
    Type: String
    Default: sg-9be70aed
  
####################################### Mappings #############################################    
    
# ==============================
# Define CF Template Mappings
# ==============================   

Mappings:
# Mappings for AMI ID information based on OS
  OS:

    'LinuxSandbox':
      AMI: "ami-0bf2911b282cf868f"
      HdSize: 128
      DeviceName: "/dev/sda1"
      SecGroupL2: L2RHSG

    'LinuxNonProd':
      AMI: "ami-07716f893f02adab0"
      HdSize: 128
      DeviceName: "/dev/sda1"
      # SecGroupL2: L2RHSG

    'LinuxQA':
      AMI: "ami-07716f893f02adab0"
      HdSize: 128
      DeviceName: "/dev/sda1"
      SecGroupL2: L2RHSG
    
    'LinuxOracle':
      AMI: "ami-b6bc65c9"
      HdSize: 128
      DeviceName: "/dev/sda1"
      SecGroupL2: L2RHSG
     
# Mappings for Availability zones    
  AvailabilityZ:
      'zone':
        a: 'A'
        b: 'B'
        c: 'C'
  RegionMap:
    us-east-1:
      Region: V
      RegionLower: v
    us-east-2:
      Region: O
      RegionLower: o
  AccountIDMap:
    '707512021127':
      VPCShortName: Core
    '359300531472':
      VPCShortName: CoreTest
    '889535458826':
      VPCShortName: CoreDR
    '434940588922':
      VPCShortName: EnterpriseProd
    '129801215131':
      VPCShortName: EnterpriseQA
    '288355943657':
      VPCShortName: EnterpriseDev
    '524246855650':
      VPCShortName: EnterpriseSandbox
    '120380718976':
      VPCShortName: NEERProd
    '926173705195':
      VPCShortName: NEERQA
    '733125211443':
      VPCShortName: NEERDev
    '484902404805':
      VPCShortName: NEERSandbox
    '678078281154':
      VPCShortName: NEERTest
    '430004966399':
      VPCShortName: FPLProd
    '485449107334':
      VPCShortName: FPLQA
    '977465404123':
      VPCShortName: FPLDev
    '237980099910':
      VPCShortName: FPLSandbox
    '688642023437':
      VPCShortName: SecurityProd
    '343234139589':
      VPCShortName: SecurityTest
    '480804328775':
      VPCShortName: Isolation
    '914606261750':
      VPCShortName: NEERDR
    '202055847252':
      VPCShortName: FPLDR
    '516627182506':
      VPCShortName: FPLTest
    '719322411134':
      VPCShortName: GulfPowerDev
    '546978450329':
      VPCShortName: GulfPowerTest
    '649713442868': 
      VPCShortName: GulfPowerQA
    '374887338695': 
      VPCShortName: GulfPowerProd 

####################################### Resources #############################################
      
# ==============================
# Define CF Template Resources
# ==============================

Resources:

# ==============================
# Instance 1
# ==============================

 EC2Instance1:
    Type: 'AWS::EC2::Instance'    
    Properties:
      DisableApiTermination: false
      InstanceType: !Ref InstanceTypeParameter
      ImageId: !FindInMap [ OS , !Ref OS, AMI ]
      IamInstanceProfile: !Ref IamInstanceProfile
      SecurityGroupIds:
      #  - Fn::ImportValue:
      #       !Join ['-',[ "SG", !FindInMap [ AccountIDMap, !Ref "AWS::AccountId", VPCShortName ],!FindInMap [ OS , !Ref OS , SecGroupL2 ] ] ]
      #  - Fn::ImportValue:
      #       !Join ['-',[ "SG", !FindInMap [ AccountIDMap, !Ref "AWS::AccountId", VPCShortName ], "L1SG" ] ]
       - !Ref L1SG 
       - !Ref L2SG 
       - !Ref L2SG2
      SubnetId: !Ref Ec2InstanceSubnetID
      BlockDeviceMappings:
        - DeviceName: !FindInMap [ OS , !Ref OS, DeviceName ]
          Ebs:
            VolumeType: gp2
            VolumeSize: !FindInMap [ OS , !Ref OS, HdSize ]
            Encrypted: "true"
        - DeviceName: "/dev/sdf"
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref VolumeSize
            Encrypted: "true"
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #cloud-config
              runcmd:
              - hostname "${Ec2Hostname}"
              - echo "${Ec2Hostname}" > /etc/hostname
              - authconfig --update --disablesssd --disablesssdauth --disablemkhomedir
              - sed -i 's/easy_install pip/easy_install pip==20.1.1/g' /root/AWSLnxinit_bootstrap.sh
              - echo "sudo /root/AWSLnxinit_bootstrap.sh > /root/AWSLnxinit_bootstrap.log 2>&1" | at -m now + 8 minute
              
            - { Ec2Hostname: !Join [ "-", [ !Join ["",['2', !ImportValue Account-Global-AccountCode, !FindInMap [RegionMap, !Ref "AWS::Region", Region]]], !Ref TypeOfInstance, !Join ['',[ !Ref AppCode, !Ref HostNumber ]]]]  }      
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - - Fn::Join:
                  - ''
                  - - "2"
                    - !ImportValue  Account-Global-AccountCode
                    - Fn::ImportValue:
                        !Join ['-',[Account-Global-RegionCode, !Ref "AWS::Region"]]
                - !Ref TypeOfInstance
                - !Join ['',[ !Ref AppCode, !Ref HostNumber ]]

        - Key: AppCode
          Value: !Ref AppCode
        - Key: AppName
          Value: !Ref AppName
        - Key: Environment
          Value: !Ref Environment
        - Key: Requestor
          Value: !Ref Requestor
        - Key: OS
          Value: !Ref OS
        - Key: HADRTier
          Value: !Ref HADRTier
        - Key: ApplicationTier
          Value: !Ref ApplicationTier
        - Key: AutomateShutdown
          Value: !Ref AutomateShutdown
        - Key: OpsWindow
          Value: !Ref OpsWindow
        - Key: WeekendOperation
          Value: !Ref WeekendOperation
        - Key: BackupWindows
          Value: !Ref BackupWindows
        - Key: MaintenanceWindow
          Value: !Ref MaintenanceWindow
        - Key: Purpose
          Value: !Ref Purpose
        - Key: DataClassification
          Value: !Ref DataClassification
        - Key: Tenant Detail
          Value: EC002

####################################### Outputs #############################################

# ==============================
# CF Template OUTPUTS
# ==============================

Outputs:

# ==============================
# Instance 1
# ==============================

  EC2Instance1HostName:
    Description: Output for EC2 Instance1
    Value:
      Fn::Join:
        - '-'
        - - Fn::Join:
            - ''
            - - "2"
              - !ImportValue  Account-Global-AccountCode
              - Fn::ImportValue:
                  !Join ['-',[Account-Global-RegionCode, !Ref "AWS::Region"]]
          - !Ref TypeOfInstance
          - !Join ['',[ !Ref AppCode, !Ref HostNumber ]]
    Export:
        Name: !Sub "${AWS::StackName}-Name-EC2Instance1"

  Ec2IP:
    Description: Output for EC2 Instance1
    Value: !GetAtt EC2Instance1.PrivateIp
    Export:
        Name: !Sub "${AWS::StackName}-EC2-IP-EC2Instance1"
  Ec2ID:
    Value: !Ref EC2Instance1
     
  Ec2AZInstance1:
    Description: "Availability zone of the newly created Instance1"
    Value: !GetAtt EC2Instance1.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-EC2-AZ-EC2Instance1"

  Ec2PriDnsInstance1:
    Description: "Private DNSName of the newly created Instance1"
    Value: !GetAtt EC2Instance1.PrivateDnsName
    Export:
      Name: !Sub "${AWS::StackName}-EC2-DNS-EC2Instance1"