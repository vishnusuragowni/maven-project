 ####################################################################################
# Service Catalog Cloud formation template that provisions EC2 instances
# Created by: Pavan Kumar Gade
# Date: 05/15/2018
# Description : Used by Service Catalog as a product for launching an EC2 instance
#
####################################################################################

####################################### Metadata #############################################
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
     ### General ###
      -
        Label:
          default: "General Parameters"
        Parameters:
          - AppCode
          - OwnerContact
          - Requestor
          - AppName
     ### EC2 Details ###
      -
        Label:
          default: "EC2 Parameters"
        Parameters:
          - HostNumber
          - InstanceTypeParameter
          - TypeOfInstance
          - Ec2InstanceSubnetID
          - ApplicationTier
          - IamInstanceProfile
          - OS
          - HADRTier
          - DataClassification
          - Purpose
     ### EC2 Config ###
      -
        Label:
          default: "EC2 Config Parameters"
        Parameters:
          - AutomateShutdown
          - WeekendOperation
          - BackupWindows
          - MaintenanceWindow
          - OpsWindow
     
####################################### Parameters #############################################
          
# ==============================
# Define CF Template Parameters
# ==============================

Parameters:

  AppCode:
    Type: String
    MaxLength: 5
    AllowedPattern: ^([A-Z0-9_-]){5}$
    Description: The application code name (NEECode) cannot be of more that 5 characters
    ConstraintDescription: Appcode field does not match the required constraints
    # Default: AT878

  Environment:
    Type: String
    AllowedValues:
      - Dev
      - Test
      - QA
      - Prod
      - DR
    Default: Dev

  InstanceType:
    Type: String
    Description: EC2 instance type, default is t2.micro
    ConstraintDescription: Must be a valid EC2 instance type.
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
    Default: m4.xlarge

  TypeOfInstance:
    Type: String
    Description: 'GC-General Compute App Server, Web Server /RD -RDS database /DB -EC2 database /AP -Appliance (firewall, loadbalancer, etc.) /BS -Beanstalk /CS -Container Service /DC-Domain Controller /EM -Elastic Map Reduce /RS -Redshift'
    AllowedValues:
      - GC
      - RD
      - DB
      - AP
      - BS
      - CS
      - AD
      - EM

  AppName:
    Type: String
    Description: 'please provide for which application Edp is creating this resource for'
    

  AvailabilityZone:
    Type: String
    AllowedValues:
      - a
      - b
      - c
    Default: a
    Description: Please specify the Availability Zone for your instances, some env may not have c

  Requestor:
    Type: String
    Description: Please specify email address of the requestor.   
 
  OwnerContact:
    Type: String
    Description: Please specify email address of the owner.

  OperatingSystem:
    Type: String
    AllowedValues:
      - Windows-2012R2-Base
      - Windows-2016-Base
    Description: Please select Windows Version

  HADRTier:
    Type: String
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
    Default: 5
    Description: Please specify the DR tier for your instance

  ApplicationTier:
    Type: String
    AllowedValues:
      - App
      - DataBase
      - Visibility
      - White
      - Lambda
      - Prime
      - DMZ
      - Web
    Default: App
    Description: Please, select in which subnet the servers will reside

  AutomateShutdown:
    Type: String
    Description: This field specifies if the server needs to be automatically shut down every day
    AllowedValues:
      - yes
      - no
    Default: no

  HostNumber:
    Type: String
    AllowedPattern: "^([0-9]){2}$"
    Description: Please assigned a number for this EC2 instance between 01 and 99. Please make sure it is unique
    ConstraintDescription: Hostnumber field has to be a 2 digit number between 01 and 99

  OpsWindow:
    Type: String
    Default: '0700-1900'
    Description: 'Please enter the Start and Stop in the following format 0700,1900'

  WeekendOperation:
    Type: String
    Default: "FALSE"
    Description: 'This field specifies if the servers needs to be running during the weekend'
    AllowedValues:
      - "TRUE"
      - "FALSE"

  BackupWindows:
    Type: String
    Default: 'SNAPSHOT;2300;0300'
    Description: 'Please enter the backup windows'
    
  MaintenanceWindow:
    Type: String
    Default: '** SRV SATURDAY 4AM-6AM'
    Description: 'Please enter the Start and Stop in the following format 0700,1900'

  DataClassification:
    Type: String
    Description: 'This field specifies the type of data that would be residing on the servers'
    Default: NO NPI

  Ec2InstanceSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Instance will be launched in the subnet specified.

  Purpose:
    Type: String
    Description: please provide a detailed purpose of this server is being built for.
    Default: This will be used to segregate SAP from PGD data streams

  SetTerminationProtection:
    Type: String
    AllowedValues:
      - true
      - false
    Default: false

  # VPCShortName:
  #   Type: AWS::SSM::Parameter::Value<String>
  #   Default: '/account/VPCShortName'

  L1SG:
    Type: String
    Default: sg-34e00d42

  L2SG:
    Type: String
    Default: sg-85e00df3

  # L2SG2:
  #   Type: String
  #   Default: sg-9be70aed

  L4SG:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Description: Must be Valid public security group.

  # L4SG2:
  #   Type: 'AWS::EC2::SecurityGroup::Id'
  #   Description: Must be Valid public security group.

####################################### Mappings ############################################
Mappings:
  # Mappings for AMI ID information based on OS
  OSMap:
    Windows-2012R2-Base:
      useast1: ami-089260db19ba2c295
      #useast2: ami-092a1e15261417967
      HdSize: 80
      OSType: WINDOWS
      DeviceName: /dev/sda1
    Windows-2016-Base:
      useast1: ami-089260db19ba2c295
      useast2: ami-04c92dc913694fc9a
      HdSize: 80
      OSType: WINDOWS
      DeviceName: /dev/sda1

  # Mappings for Availability zones
  AZMap:
    zone:
      a: A
      b: B
      c: C

  # Mappings for Region
  RegionMap:
    us-east-1:
      Region: useast1
    us-east-2:
      Region: useast2

####################################### Conditions #####################################
Conditions:
  IsDR: !Equals [!Ref 'AWS::Region', 'us-east-2']

####################################### Resources #######################################

Resources :
 #EBS Volume
  EBSVol01:
    Type: "AWS::EC2::Volume"
    Properties:
     AvailabilityZone: !Join
        - ''
        - - !Ref "AWS::Region"
          - !Ref AvailabilityZone
     Size: 50
     VolumeType: gp2
     Encrypted: True
     KmsKeyId: !ImportValue Platform-Default-KMS
    DeletionPolicy: Snapshot

  #Elastic network inteface
  # ENI01:
  #   Type: AWS::EC2::NetworkInterface
  #   Properties:
  #     SubnetId: !Ref Ec2InstanceSubnetID
  #     #   Fn::ImportValue:
  #     #     !Join ['-', ['VPC', !Ref VPCShortName, !FindInMap [ AZMap, zone, !Ref AvailabilityZone ], !Ref ApplicationTier,'SUBNET']]
  #     # Description: Elastic network interface for ec2 instance

  #     GroupSet:
  #       # - Fn::ImportValue:
  #       #     !Join ['-',[ 'SG', !Ref VPCShortName, 'L1SG' ] ]
  #       # - Fn::ImportValue:
  #       #     !Join ['-',[ 'SG', !Ref VPCShortName, 'L2WINSG' ] ]
  #       - !Ref L1SG 
  #       - !Ref L2SG 
  #       # - !Ref L2SG2

  #     SourceDestCheck: True
  #     Tags:
  #       - Key: AppCode
  #         Value: !Ref AppCode
  #       - Key: Environment
  #         Value: !Ref Environment
  #       - Key: Name
  #         Value:
  #           Fn::Join:
  #             - '-'
  #             - - Fn::Join:
  #                 - ''
  #                 - - '2'
  #                   - !ImportValue  Account-Global-AccountCode
  #                   - Fn::ImportValue:
  #                       !Join ['-',[Account-Global-RegionCode, !Ref 'AWS::Region']]
  #               - !Ref TypeOfInstance
  #               - !Join ['',[ !Ref AppCode, !Ref HostNumber ]]
  #               - 'ENI'

  #EC2 Instance
  EC2Instance01:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: NEE-EC2-ITAM-Role
      DisableApiTermination: !Ref SetTerminationProtection
      InstanceType: !Ref InstanceType
      ImageId: !If
        - IsDR
        - !FindInMap [ OSMap , !Ref OperatingSystem, !FindInMap [RegionMap, !Ref 'AWS::Region', Region] ]
        - !FindInMap [ OSMap , !Ref OperatingSystem, !FindInMap [RegionMap, !Ref 'AWS::Region', Region] ]
      SecurityGroupIds:
      #  - Fn::ImportValue:
      #       !Join ['-',[ "SG", !FindInMap [ AccountIDMap, !Ref "AWS::AccountId", VPCShortName ],!FindInMap [ OS , !Ref OS , SecGroupL2 ] ] ]
      #  - Fn::ImportValue:
      #       !Join ['-',[ "SG", !FindInMap [ AccountIDMap, !Ref "AWS::AccountId", VPCShortName ], "L1SG" ] ]
       - !Ref L4SG
       - !Ref L1SG 
       - !Ref L2SG 
        
      SubnetId: !Ref Ec2InstanceSubnetID
      # NetworkInterfaces:
      #   - NetworkInterfaceId: !Ref ENI01
      #     DeviceIndex: '0'
      # AvailabilityZone: !Join
      #   - ''
      #   - - !Ref 'AWS::Region'
      #     - !Ref AvailabilityZone
      BlockDeviceMappings:
        - DeviceName: !FindInMap [ OSMap , !Ref OperatingSystem, DeviceName ]
          Ebs:
            VolumeType: gp2
            VolumeSize: !FindInMap [ OSMap , !Ref OperatingSystem, HdSize ]
      Volumes:
        -
          VolumeId: !Ref EBSVol01
          Device: /dev/xvdb
      UserData:
        Fn::Base64:
          Fn::Sub:
          - |
            #cloud-config
            runcmd:
            "<script> powershell.exe "C:\Temp\DomainJoin.ps1"</script>"
          - {}
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - - Fn::Join:
                  - ''
                  - - "2"
                    - !ImportValue  Account-Global-AccountCode
                    - Fn::ImportValue:
                        !Join ['-',[Account-Global-RegionCode, !Ref 'AWS::Region']]
                - !Ref TypeOfInstance
                - !Join ['',[ !Ref AppCode, !Ref HostNumber ]]
        - Key: AppCode
          Value: !Ref AppCode
        - Key: Environment
          Value: !Ref Environment
        - Key: OS
          Value: !FindInMap [ OSMap , !Ref OperatingSystem, OSType ]
        - Key: AppName
          Value: !Ref AppName
        - Key: Requestor
          Value: !Ref Requestor
        - Key: HADRTier
          Value: !Ref HADRTier
        - Key: ApplicationTier
          Value: !Ref ApplicationTier
        - Key: AutomateShutdown
          Value: !Ref AutomateShutdown
        - Key: OpsWindow
          Value: !Ref OpsWindow
        - Key: WeekendOperation
          Value: !Ref WeekendOperation
        - Key: BackupWindows
          Value: !Ref BackupWindows
        - Key: MaintenanceWindow
          Value: !Ref MaintenanceWindow
        - Key: Purpose
          Value: !Ref Purpose
        - Key: DataClassification
          Value: !Ref DataClassification
        - Key: Tenant Detail
          Value: EC001
        - Key: PatchCategory
          Value: BU PHASE

####################################### Outputs ##########################################
Outputs:
  EC2Instance01HostName:
    Description: Output for EC2 Instance01
    Value:
      Fn::Join:
        - '-'
        - - Fn::Join:
            - ''
            - - "2"
              - !ImportValue  Account-Global-AccountCode
              - Fn::ImportValue:
                  !Join ['-',[Account-Global-RegionCode, !Ref "AWS::Region"]]
          - !Ref TypeOfInstance
          - !Join ['',[ !Ref AppCode, !Ref HostNumber ]]
    Export:
        Name: !Sub "${AWS::StackName}-Name-EC2Instance01"

  Ec2IP:
    Description: Output for EC2 Instance01
    Value: !GetAtt EC2Instance01.PrivateIp
    Export:
        Name: !Sub "${AWS::StackName}-EC2-IP-EC2Instance01"
  Ec2ID:
    Value: !Ref EC2Instance01
     
  Ec2AZInstance01:
    Description: "Availability zone of the newly created Instance01"
    Value: !GetAtt EC2Instance01.AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-EC2-AZ-EC2Instance01"

  Ec2PriDnsInstance01:
    Description: "Private DNSName of the newly created Instance01"
    Value: !GetAtt EC2Instance01.PrivateDnsName
    Export:
      Name: !Sub "${AWS::StackName}-EC2-DNS-EC2Instance01"